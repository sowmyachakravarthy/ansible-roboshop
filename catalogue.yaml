- name: configure catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable default nodejs
    ansible.builtin.command: dnf module enable nodejs -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: presents

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: create app directory
    ansible.builtin.file:
      path: /app #which path to create
      state: directory #directory ni create chestundi

  - name: download catalogue code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

#this module by default thinks, file exists on ansible control server, need to extract on to remote machine
#emote_src means file already exists in catalogue server
  - name: extract catalogue code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy catalogue service to system directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present # or you can give install also, try once with install while running

